#Libraries
library(tidyverse)
library(rjson)
library(httr)
library(janitor)
library(googledrive)
library(mailR)
library(rmarkdown)
#Get the DateTime that file was exported
ExportDateTime <- format((Sys.time() - (6*60*60)),
"%Y-%m-%d_%I%p")
#Create main dataframe
lvmpd_cfs_main <- NULL
#Build sequence of days, can only be between 1 and 31.
##This appears to work, even if day isn't represented in dataframe
x <- seq(1,31)
#Create 7 hours to subtract, due to UTC time zone
hrs <- 7 * 60 * 60
options(scipen = 999)
####
####
####
#For Loop
for (i in x) {
#Create URL
##It wants a range of two days, but I only want 1 day, so I feed in the "day" value twice
url <- paste0("https://services.arcgis.com/jjSk6t82vIntwDbs/arcgis/rest/services/LVMPD_Calls_For_Service_30_Days/FeatureServer/0/query?where=%20(Day%20%3D%20",
i,
"%20OR%20Day%20%3D%20",
i,
")%20&outFields=*&outSR=4326&f=json")
#Load in the data via API Call
url_get <- httr::GET(url)
lvmpd_content <- httr::content(url_get,
as = "text")
#Start parsing JSON file
##Be sure to flatten it
lvmpd_JSON <- jsonlite::fromJSON(lvmpd_content,
flatten = TRUE)
#Turn into dataframe
lvmpd_DF <- (lvmpd_JSON$features) %>%
as.data.frame() %>%
#Start cleaning column names
clean_names()
#Finish cleaning column names
colnames(lvmpd_DF) <- gsub("attributes_", "",
colnames(lvmpd_DF))
#Bind the new scrape's data
lvmpd_cfs_main <- rbind(lvmpd_cfs_main,
lvmpd_DF)
#Wait 1 second before running again
Sys.sleep(1)
}
#Fix the date/time columns
lvmpd_cfs_main2 <- lvmpd_cfs_main %>%
#Get only first 10 characters
mutate(incident_date = substr(incident_date, 1, 10),
updated_date = substr(updated_date, 1, 10)) %>%
#Convert into correct date
mutate(incident_date = as.POSIXct(as.numeric(incident_date),
origin="1970-01-01")) %>%
mutate(incident_date2 = format(incident_date, tz="America/Los_Angeles",usetz=TRUE)) %>%
#Get into date format for Rbind later
mutate(incident_date2 = ymd_hms(incident_date2))
View(lvmpd_cfs_main2)
lvmpd_all_clean <- lvmpd_all %>%
select(incident_number = incidentnumber,
incident_date = incidentdate,
classification,
incident_type_code,
incident_type_description = incidenttypedescription,
address = location,
disposition,
latitude,
longitude,
weekday,
hour,
month,
year,
zipcode,
geometry_x = x,
geomtery_y = y) %>%
mutate(incident_date = ymd_hms(incident_date)) %>%
mutate(incident_date2 = format(incident_date, tz="America/Los_Angeles",usetz=TRUE))
options(scipen = 999)
lvmpd_all <- read.csv("C:/Users/sdavidson/Downloads/LVMPD_Calls_For_Service_All.csv") %>%
clean_names()
hrs <- 8 * 60 * 60
lvmpd_all_clean <- lvmpd_all %>%
select(incident_number = incidentnumber,
incident_date = incidentdate,
classification,
incident_type_code,
incident_type_description = incidenttypedescription,
address = location,
disposition,
latitude,
longitude,
weekday,
hour,
month,
year,
zipcode,
geometry_x = x,
geomtery_y = y) %>%
mutate(incident_date = ymd_hms(incident_date)) %>%
mutate(incident_date2 = format(incident_date, tz="America/Los_Angeles",usetz=TRUE))
View(lvmpd_all_clean)
options(scipen = 999)
lvmpd_all <- read.csv("C:/Users/sdavidson/Downloads/LVMPD_Calls_For_Service_All.csv") %>%
clean_names()
hrs <- 8 * 60 * 60
lvmpd_all_clean <- lvmpd_all %>%
select(incident_number = incidentnumber,
incident_date = incidentdate,
classification,
incident_type_code,
incident_type_description = incidenttypedescription,
address = location,
disposition,
latitude,
longitude,
weekday,
hour,
month,
year,
zipcode,
geometry_x = x,
geomtery_y = y) %>%
mutate(incident_date = ymd_hms(incident_date)) %>%
#Format to our timezone, includes daylight savings
mutate(incident_date = format(incident_date, tz="America/Los_Angeles",usetz=TRUE))
lvmpd_all_clean <- lvmpd_all %>%
select(incident_number = incidentnumber,
incident_date = incidentdate,
classification,
incident_type_code,
incident_type_description = incidenttypedescription,
address = location,
disposition,
latitude,
longitude,
weekday,
hour,
month,
year,
zipcode,
geometry_x = x,
geomtery_y = y) %>%
mutate(incident_date = ymd_hms(incident_date)) %>%
#Format to our timezone, includes daylight savings
mutate(incident_date = format(incident_date, tz="America/Los_Angeles",usetz=TRUE)) %>%
mutate(incident_date = ymd_hms(incident_date))
View(lvmpd_all_clean)
lvmpd_all_clean <- lvmpd_all %>%
select(incident_number = incidentnumber,
incident_date = incidentdate,
classification,
incident_type_code,
incident_type_description = incidenttypedescription,
address = location,
disposition,
latitude,
longitude,
weekday,
hour,
month,
year,
zipcode,
geometry_x = x,
geomtery_y = y) %>%
mutate(incident_date = ymd_hms(incident_date)) %>%
#Format to our timezone, includes daylight savings
mutate(incident_date = format(incident_date, tz="America/Los_Angeles",usetz=TRUE)) %>%
mutate(incident_date = ymd_hms(incident_date)) %>%
distinct()
lvmpd_all_clean <- lvmpd_all %>%
select(incident_number = incidentnumber,
incident_date = incidentdate,
classification,
incident_type_code,
incident_type_description = incidenttypedescription,
address = location,
disposition,
latitude,
longitude,
weekday,
hour,
month,
year,
zipcode,
geometry_x = x,
geomtery_y = y) %>%
mutate(incident_date = ymd_hms(incident_date)) %>%
#Format to our timezone, includes daylight savings
mutate(incident_date = format(incident_date, tz="America/Los_Angeles",usetz=TRUE)) %>%
mutate(incident_date = ymd_hms(incident_date)) %>%
distinct() %>%
mutate_all(as.character)
lvmpd_all_pivot <- lvmpd_all %>%
group_by(incidentnumber) %>%
summarize(count = n()) %>%
arrange(desc(count))
View(lvmpd_all_pivot)
View(lvmpd_all)
options(scipen = 999)
lvmpd_all <- read.csv("C:/Users/sdavidson/Downloads/LVMPD_Calls_For_Service_All.csv") %>%
clean_names()
hrs <- 8 * 60 * 60
lvmpd_all_clean <- lvmpd_all %>%
select(incident_number = incidentnumber,
incident_date = incidentdate,
classification,
incident_type_code,
incident_type_description = incidenttypedescription,
address = location,
disposition,
latitude,
longitude,
weekday,
hour,
month,
year,
zipcode,
geometry_x = x,
geomtery_y = y) %>%
mutate(incident_date = ymd_hms(incident_date)) %>%
#Format to our timezone, includes daylight savings
mutate(incident_date = format(incident_date, tz="America/Los_Angeles",usetz=TRUE)) %>%
mutate(incident_date = ymd_hms(incident_date)) %>%
distinct() %>%
mutate_all(as.character)
lvmpd_2019_clean <- lvmpd_all_clean %>%
filter(year == "2019")
View(lvmpd_all_clean)
options(scipen = 999)
lvmpd_all <- read.csv("C:/Users/sdavidson/Downloads/LVMPD_Calls_For_Service_All.csv") %>%
clean_names()
lvmpd_all_clean <- lvmpd_all %>%
select(incident_number = incidentnumber,
incident_date = incidentdate,
classification,
incident_type_code,
incident_type_description = incidenttypedescription,
address = location,
disposition,
latitude,
longitude,
weekday,
hour,
month,
year,
zipcode,
geometry_x = x,
geomtery_y = y) %>%
mutate(incident_date = ymd_hms(incident_date)) %>%
#Format to our timezone, includes daylight savings
mutate(incident_date = format(incident_date, tz="America/Los_Angeles",usetz=TRUE)) %>%
mutate(incident_date = ymd_hms(incident_date)) %>%
distinct() %>%
mutate_all(as.character)
###
###
lvmpd_2019_clean <- lvmpd_all_clean %>%
filter(year == "2019")
lvmpd_2020_clean <- lvmpd_all_clean %>%
filter(year == "2020")
lvmpd_2021_clean <- lvmpd_all_clean %>%
filter(year == "2021")
lvmpd_2022_clean <- lvmpd_all_clean %>%
filter(year == "2022")
lvmpd_2023_clean <- lvmpd_all_clean %>%
filter(year == "2023")
###
###
write.csv(lvmpd_2019_clean,
"C:/Users/sdavidson/Downloads/lvmpd_cfs_2019.csv",
row.names = FALSE)
write.csv(lvmpd_2020_clean,
"C:/Users/sdavidson/Downloads/lvmpd_cfs_2020.csv",
row.names = FALSE)
write.csv(lvmpd_2021_clean,
"C:/Users/sdavidson/Downloads/lvmpd_cfs_2021.csv",
row.names = FALSE)
write.csv(lvmpd_2022_clean,
"C:/Users/sdavidson/Downloads/lvmpd_cfs_2022.csv",
row.names = FALSE)
write.csv(lvmpd_2023_clean,
"C:/Users/sdavidson/Downloads/lvmpd_cfs_2023.csv",
row.names = FALSE)
View(lvmpd_cfs_main)
View(lvmpd_cfs_main)
View(lvmpd_2023_clean)
#Libraries
library(tidyverse)
library(rjson)
library(httr)
library(janitor)
library(googledrive)
library(mailR)
library(rmarkdown)
#Get the DateTime that file was exported
ExportDateTime <- format((Sys.time() - (6*60*60)),
"%Y-%m-%d_%I%p")
#Create main dataframe
lvmpd_cfs_main <- NULL
#Build sequence of days, can only be between 1 and 31.
##This appears to work, even if day isn't represented in dataframe
x <- seq(1,31)
#Create 7 hours to subtract, due to UTC time zone
hrs <- 7 * 60 * 60
#Turn off Scientific Notation
options(scipen = 999)
####
####
####
#For Loop
for (i in x) {
#Create URL
##It wants a range of two days, but I only want 1 day, so I feed in the "day" value twice
url <- paste0("https://services.arcgis.com/jjSk6t82vIntwDbs/arcgis/rest/services/LVMPD_Calls_For_Service_30_Days/FeatureServer/0/query?where=%20(Day%20%3D%20",
i,
"%20OR%20Day%20%3D%20",
i,
")%20&outFields=*&outSR=4326&f=json")
#Load in the data via API Call
url_get <- httr::GET(url)
lvmpd_content <- httr::content(url_get,
as = "text")
#Start parsing JSON file
##Be sure to flatten it
lvmpd_JSON <- jsonlite::fromJSON(lvmpd_content,
flatten = TRUE)
#Turn into dataframe
lvmpd_DF <- (lvmpd_JSON$features) %>%
as.data.frame() %>%
#Start cleaning column names
clean_names()
#Finish cleaning column names
colnames(lvmpd_DF) <- gsub("attributes_", "",
colnames(lvmpd_DF))
#Bind the new scrape's data
lvmpd_cfs_main <- rbind(lvmpd_cfs_main,
lvmpd_DF)
#Wait 1 second before running again
Sys.sleep(1)
}
####
####
####
#Fix the date/time columns
lvmpd_cfs_main <- lvmpd_cfs_main %>%
#Get only first 10 characters
mutate(incident_date = substr(incident_date, 1, 10),
updated_date = substr(updated_date, 1, 10)) %>%
#Convert into correct date
mutate(incident_date = as.POSIXct(as.numeric(incident_date),
origin="1970-01-01")) %>%
#Format to our timezone, includes daylight savings
mutate(incident_date = format(incident_date, tz="America/Los_Angeles",usetz=TRUE)) %>%
mutate(incident_date = ymd_hms(incident_date))
#Drop the columns I don't want for bind later
lvmpd_cfs_main <- lvmpd_cfs_main %>%
select(-c(objectid, day, updated_date))
lvmpd_cfs_main <- lvmpd_cfs_main %>%
mutate_all(as.character)
lvmpd_cfs_2023_new <- rbind(lvmpd_2023_clean,
lvmpd_cfs_main)
options(scipen = 999)
lvmpd_all <- read.csv("C:/Users/sdavidson/Downloads/LVMPD_Calls_For_Service_All.csv") %>%
clean_names()
options(scipen = 999)
lvmpd_all <- read.csv("C:/Users/sdavidson/Downloads/LVMPD_Calls_For_Service_All.csv") %>%
clean_names()
lvmpd_all_clean <- lvmpd_all %>%
select(incident_number = incidentnumber,
incident_date = incidentdate,
classification,
incident_type_code,
incident_type_description = incidenttypedescription,
address = location,
disposition,
latitude,
longitude,
weekday,
hour,
month,
year,
zip_code,
geometry_x = x,
geomtery_y = y) %>%
mutate(incident_date = ymd_hms(incident_date)) %>%
#Format to our timezone, includes daylight savings
mutate(incident_date = format(incident_date, tz="America/Los_Angeles",usetz=TRUE)) %>%
mutate(incident_date = ymd_hms(incident_date)) %>%
distinct() %>%
mutate_all(as.character)
options(scipen = 999)
lvmpd_all <- read.csv("C:/Users/sdavidson/Downloads/LVMPD_Calls_For_Service_All.csv") %>%
clean_names()
lvmpd_all_clean <- lvmpd_all %>%
select(incident_number = incidentnumber,
incident_date = incidentdate,
classification,
incident_type_code,
incident_type_description = incidenttypedescription,
address = location,
disposition,
latitude,
longitude,
weekday,
hour,
month,
year,
zip_code = zipcode,
geometry_x = x,
geomtery_y = y) %>%
mutate(incident_date = ymd_hms(incident_date)) %>%
#Format to our timezone, includes daylight savings
mutate(incident_date = format(incident_date, tz="America/Los_Angeles",usetz=TRUE)) %>%
mutate(incident_date = ymd_hms(incident_date)) %>%
distinct() %>%
mutate_all(as.character)
###
###
lvmpd_2019_clean <- lvmpd_all_clean %>%
filter(year == "2019")
lvmpd_2020_clean <- lvmpd_all_clean %>%
filter(year == "2020")
lvmpd_2021_clean <- lvmpd_all_clean %>%
filter(year == "2021")
lvmpd_2022_clean <- lvmpd_all_clean %>%
filter(year == "2022")
lvmpd_2023_clean <- lvmpd_all_clean %>%
filter(year == "2023")
###
###
write.csv(lvmpd_2019_clean,
"C:/Users/sdavidson/Downloads/lvmpd_cfs_2019.csv",
row.names = FALSE)
write.csv(lvmpd_2020_clean,
"C:/Users/sdavidson/Downloads/lvmpd_cfs_2020.csv",
row.names = FALSE)
write.csv(lvmpd_2021_clean,
"C:/Users/sdavidson/Downloads/lvmpd_cfs_2021.csv",
row.names = FALSE)
write.csv(lvmpd_2022_clean,
"C:/Users/sdavidson/Downloads/lvmpd_cfs_2022.csv",
row.names = FALSE)
write.csv(lvmpd_2023_clean,
"C:/Users/sdavidson/Downloads/lvmpd_cfs_2023.csv",
row.names = FALSE)
lvmpd_cfs_main <- lvmpd_cfs_main %>%
mutate_all(as.character)
lvmpd_cfs_2023_new <- rbind(lvmpd_2023_clean,
lvmpd_cfs_main)
colnames(lvmpd_cfs_main)
options(scipen = 999)
lvmpd_all <- read.csv("C:/Users/sdavidson/Downloads/LVMPD_Calls_For_Service_All.csv") %>%
clean_names()
lvmpd_all_clean <- lvmpd_all %>%
select(incident_number = incidentnumber,
incident_date = incidentdate,
classification,
incident_type_code,
incident_type_description = incidenttypedescription,
address = location,
disposition,
latitude,
longitude,
weekday,
hour,
month,
year,
zip_code = zipcode,
geometry_x = x,
geometry_y = y) %>%
mutate(incident_date = ymd_hms(incident_date)) %>%
#Format to our timezone, includes daylight savings
mutate(incident_date = format(incident_date, tz="America/Los_Angeles",usetz=TRUE)) %>%
mutate(incident_date = ymd_hms(incident_date)) %>%
distinct() %>%
mutate_all(as.character)
###
###
lvmpd_2019_clean <- lvmpd_all_clean %>%
filter(year == "2019")
lvmpd_2020_clean <- lvmpd_all_clean %>%
filter(year == "2020")
lvmpd_2021_clean <- lvmpd_all_clean %>%
filter(year == "2021")
lvmpd_2022_clean <- lvmpd_all_clean %>%
filter(year == "2022")
lvmpd_2023_clean <- lvmpd_all_clean %>%
filter(year == "2023")
###
###
write.csv(lvmpd_2019_clean,
"C:/Users/sdavidson/Downloads/lvmpd_cfs_2019.csv",
row.names = FALSE)
write.csv(lvmpd_2020_clean,
"C:/Users/sdavidson/Downloads/lvmpd_cfs_2020.csv",
row.names = FALSE)
write.csv(lvmpd_2021_clean,
"C:/Users/sdavidson/Downloads/lvmpd_cfs_2021.csv",
row.names = FALSE)
write.csv(lvmpd_2022_clean,
"C:/Users/sdavidson/Downloads/lvmpd_cfs_2022.csv",
row.names = FALSE)
write.csv(lvmpd_2023_clean,
"C:/Users/sdavidson/Downloads/lvmpd_cfs_2023.csv",
row.names = FALSE)
